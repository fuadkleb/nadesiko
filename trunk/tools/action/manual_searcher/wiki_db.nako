
# ハンドル
CMDとは整数。WIKIとは整数

/* # Test
DBについて
　初期化
　`キー送信`の命令検索
　STR=それをリスト絞り込み選択
　もしSTRが空でなければ
　　STRの`,`までを切り取る
　　STRを言う
　　STRの命令情報取得
　　それを言う
# */

# wiki,コマンドのSQLiteデータベースを初期化
●DBを初期化
　※"nadesiko\tools\"にデータベースがある
　`..\..\`を母艦パスで相対パス展開
　それに作業フォルダ変更
　CMD =`command.db`をSQLITE開く。
　WIKI=`wiki.db`をSQLITE開く。
　`SJIS`にSQLITE出力コード設定。

# WORDを含む命令を検索して、「ID,命令名」をHitした分返す
●DBから命令検索({文字列}WORDの|WORDを)
　返り値とは配列
　WORD=WORDをSJIS_UTF8N変換
　返り値=「SELECT id,name FROM logs WHERE name LIKE '%{WORD}%';」をSQLITE実行
　返り値の0を配列削除
　返り値を戻す

# 命令名NAMEのwikiでの説明の情報を取得して返す
●DBから命令情報取得({文字列}NAMEの|NAMEを)
　AR1とは配列。AR2とは配列。SQL文とは文字列
　SQL文=「SELECT id,name,body FROM logs WHERE name = '{NAMEをSJIS_UTF8N変換}';」
　AR1=SQL文をSQLITE実行。
　SQL文=「SELECT name,args,desc,kana FROM command WHERE name = '{NAME}'」
　AR2=CMDでSQL文をSQLITE実行。
　もしAR2[1][0]が空ならば
　　「"{NAME}"が見当たりません。」を戻す
　違えば
　　「【名前】{AR2\1\0} ({AR2\1\3})
【引数】{AR2\1\1}
【説明】{AR2\1\2}
」＆改行＆AR1\1\2を戻す

