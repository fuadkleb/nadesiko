#-----------------------------------------------------------------------
# 七並べ
#-----------------------------------------------------------------------
# 初期化
！変数宣言が必要
母艦は「トランプ - 七並べ」
文字書体は、「ＭＳ ゴシック」
対戦人数とは整数＝４
画面Wとは整数＝母艦のクライアントW - 40
画面Hとは整数＝母艦のクライアントH - 140
画面Xとは整数＝INT((母艦のクライアントW - 画面W) / 2)
画面Yとは整数＝２０
カードWとは整数＝INT(画面W / 13)
カードHとは整数＝INT(画面H / 4)
マークとは配列
マーク色とは配列
マーク[0]=「◆」。マーク色[0]=黒色
マーク[1]=「★」。マーク色[1]=青色
マーク[2]=「○」。マーク色[2]=赤色
マーク[3]=「□」。マーク色[3]=紫色
カード名とは文字列＝「Ａ,２,３,４,５,６,７,８,９,10,Ｊ,Ｑ,Ｋ」を「,」で区切る

テーブルとは配列。
手札とは配列。
ゲームターンとは文字列＝「準備」
順位とは整数
クリアとは配列
カードとは配列
Ｃとは整数
# カードの作成 ... 13 * 4 = 52枚
Cを0から51まで繰り返す
　　カード[C] = C

# GUI
情報ラベルとはラベル
そのＸは画面Ｘ
そのＹは画面Ｙ＋カードＨ＊４＋８
そのテキストは「七並べ」
「,mnuPass,パス
mnuPass,mnuPass2,パスする,,,パス実行」をメニュー一括作成

＃デモ表示
デモ描画処理。
ゲーム開始。

●デモ描画処理
　　Ｃとは整数
    ＸＸとは整数
    ＹＹとは整数
    Cを0から51まで繰り返す
    　　YY = INT(C / 13) * カードH
        XX = INT(C % 13) * カードW
    　　カード描画処理(画面X + XX, 画面Y + YY, C)
　　0.2秒待つ
    ３回
　　　　カードを配列シャッフル
    　　Cを0から51まで繰り返す
    　　　　YY = INT(C / 13) * カードH
        　　XX = INT(C % 13) * カードW
    　　　　カード描画処理(画面X + XX, 画面Y + YY, カード[C])
        0.2秒待つ
    ここまで
    Cを0から51まで繰り返す
    　　YY = INT(C / 13) * カードH
        XX = INT(C % 13) * カードW
    　　カード描画処理(画面X + XX, 画面Y + YY, -1)
　　ここまで
    0.3秒待つ
    
●カード描画処理(XX,YY,NO)
    ＭＭとは整数。
    ＣＣとは整数
    
    線太さは1
　　文字サイズ = 14
　　もし(NO < 0)ならば
　　　　線色は白色
　　　　塗り色はRGB(200,200,200)
        角丸四角(XX,YY,XX+カードW,YY+カードH,８,８)
    違えば　　
　　　　線色は黒色
    　　塗り色はRGB(220,220,220)
    　　角丸四角(XX,YY,XX+カードW,YY+カードH,８,８)
 　 　　MM＝マーク[INT(NO/13)]
    　　文字色は、マーク色[INT(NO/13)]
    　　CC＝カード名[NO%13]
    　　XX+12,YY+10へ「{MM}{~}{CC}」を文字描画
　　ここまで

●テーブル描画処理
    ＴＭとは整数
    ＴＣとは整数
    ＸＸとは整数
    ＹＹとは整数
    
    ＴＭを０から３まで繰り返す
    　　ＴＣを０から12まで繰り返す
        　　XX=画面X + ＴＣ*カードW
            YY=画面Y + ＴＭ*カードH
            カード描画処理(XX,YY,テーブル[ＴＭ][ＴＣ])
        ここまで
    ここまで

●手札描画処理
　　Ｃとは整数
    ＯＫフラグとは整数
    ＮＯとは整数
    ＸＸとは整数
    ＹＹとは整数
    
    ＃画面をクリア
    塗り色は白色
    線色は白色
    四角(画面Ｘ,画面Ｙ＋カードＨ*4 + 30,画面Ｘ＋カードＷ＊13,画面Ｙ＋カードＨ*5 + 30)
　　
    ＃描画
    手札[0]を配列数値ソート。
　　Ｃを０から（手札[0]の配列要素数-1）まで繰り返す
    　　XX = 画面Ｘ＋Ｃ＊カードＷ
        YY = 画面Ｙ＋カードＨ*4 + 30
        NO = 手札[0][C]
        ＯＫフラグ＝手札提出判断（ＮＯ）
        # 描画
        カード描画処理(XX,YY,手札[0][C])
　　　　# マークを付ける
        もし、ＯＫフラグ＝オンならば
        　　線太さ＝2
        　　線色＝黄色
        　　線（XX,YY+4,XX+カードW,YY+4）
        ここまで

●手札提出判断（Ｎ）
　　ＣＭとは整数
    ＣＮとは整数
    ＯＫフラグとは整数
    ＮＮとは整数
    
    ＃番号とマークを得る
　　ＣＭ＝Ｃマーク（Ｎ）
    ＣＮ＝Ｃ番号（Ｎ）
    
    ＃１つ右を見る＝６以下の場合
    もし（０＜＝ＣＮ）＆＆（ＣＮ＜＝６）ならば
    　　ＮＮ＝テーブル[CM][CN+1]
        もし、ＮＮ＞＝０ならば、ＯＫフラグはオン
    
    ＃１つ左を見る＝６以上の場合
    もし（６＜＝ＣＮ）＆＆（ＣＮ＜＝１２）ならば
    　　ＮＮ＝テーブル[CM][CN-1]
        もし、ＮＮ＞＝０ならば、ＯＫフラグはオン
　　
    それは、ＯＫフラグ。

●カード配布処理
　　Ｃとは整数
    Ｐとは整数
    Ｍとは整数
    
    # カードのシャッフル
    Cを0から51まで繰り返す
　　　　カード[C] = C
　　３回、カードの配列シャッフル
　　
    # 人に配布
　　Cを0から51まで繰り返す
　　　　P = C % 対戦人数
　　    手札[P]に、カード[C]を、配列追加。
　　
    # テーブルを初期化
    Mを0から3まで繰り返す
    　　Cを0から12まで繰り返す
        　　テーブル[M][C] = -1

●Ｃマーク（Ｎの）
　　それはINT(N / 13)

●Ｃ番号（Ｎの）
　　それは（N % 13）

●七提出処理
　　Ｐとは整数
    Ｃとは整数
    ＮＯとは整数
    
    # ７を持っていればテーブルに出す
    Pを0から3まで繰り返す
    　　Ｃ＝０
        （Ｃ＜配列要素数（手札[P]））の間
        　　ＮＯ＝手札[P][C]
            もし、Ｃ番号（ＮＯ）＝6ならば
            　　テーブル[Cマーク（NO）][6] = ＮＯ
                手札[P]のCを配列削除
            違えば
            　　C=C+1

●ゲーム開始
　　順位は１
    クリアは、「0,0,0,0」を「,」で区切ったもの。
　　カード配布処理。
    七提出処理。
　　テーブル描画処理
　　手札描画処理。
    ゲームターンは「入力」
    情報ラベルは「手札を選んでください。」

＃ユーザーがカードを選択したら・・・
母艦のマウス押した時は〜
    もし、ゲームターンが「待機」ならば、戻る。
　　＃何番のカードがクリックされたか調べる
    Ｘ＝母艦のマウスＸ
    Ｙ＝母艦のマウスＹ
    Ｙ１＝画面Ｙ＋カードＨ＊４+30
    Ｙ２＝Ｙ１＋カードＨ
    もし（Ｙ１＜＝Ｙ）＆＆（Ｙ＜＝Ｙ２）でなければ、戻る
    Ｃ＝ＩＮＴ（（Ｘ−画面Ｘ）÷カードＷ）
    もし、配列要素数（手札[0])<=Cならば、戻る
    ＃判断
    NO＝手札[0][C]
    もし、手札提出判断（NO)＝オフならば
    　　情報ラベルは「その手札は出せません。他のカードかパスを選んでください。」
        戻る
    CM＝Cマーク(NO)
    CN＝C番号(NO)
    テーブル[CM][CN]=NO
    手札[0]のCを配列削除。
    もし、配列要素数(手札[0])=0ならば
    　　「{ランタイムパス}tools\kin.wav」をWAV再生
    　　「あがり！｛順位｝位でした！」と言う
        ゲーム開始。
        戻る。
    情報ラベルは「出しました。」
    ゲームターンは「待機」
    テーブル描画処理。
    手札描画処理。
    ランタイムパス＆「tools\basi.wav」をWAV再生
    0.3秒待つ
    他プレイヤー処理。


●他プレイヤー処理
　　Ｐとは整数
    最大度数とは整数
    最大Ｃとは整数
    カード数とは整数
    Ｃとは整数
    ＣＭとは整数
    ＣＮとは整数
    ＮＯとは整数
    度数とは整数
    
    Ｐを１から３まで繰り返す
    　　最大度数＝０
        最大Ｃ＝−１
        ＃あがったか判断
        カード数は配列要素数（手札[P]）
        もし（カード数＝０）ならば
        　　もし（クリア[P]＝ 0）ならば
            　　「ＣＯＭ｛Ｐ｝があがりました！」と言う
                クリア[P] = 1
                順位＝順位＋１
            違えば
            　　情報ラベルは「ＣＯＭ｛Ｐ｝は、もうあがってます。」
            　　0.3秒待つ。
            続ける。
        ＃手持ちの札で一番妥当なものを出す
        Ｃを０からカード数-1まで繰り返す
        　　ＮＯ＝手札[Ｐ][Ｃ]
            もし（手札提出判断（ＮＯ）＝オン）ならば
            　　ＣＭ＝Ｃマーク（ＮＯ）
            　　ＣＮ＝Ｃ番号（ＮＯ）
            　　度数＝ABS(ＣＮ−6)
            　　もし（度数＞＝最大度数）ならば
            　　　　最大度数は度数
                　　最大ＣはＣ
        ＃出せるカードがある
        もし、最大Ｃ＞＝０ならば
        　　ＮＯ＝手札[P][最大Ｃ]
            ＣＭ＝Ｃマーク（ＮＯ）
            ＣＮ＝Ｃ番号（ＮＯ）
            テーブル[CM][CN]=NO
            手札[P]の最大Ｃを配列削除
        　　テーブル描画処理。
            情報ラベルは「ＣＯＭ｛Ｐ｝が｛マーク[CM]｝｛カード名[CN]｝を出しました。」
            ランタイムパス＆「tools\basi.wav」をWAV再生
        違えば
        　　情報ラベル＝「ＣＯＭ｛Ｐ｝はパスしました。」
        ＃反映結果を表示
        0.3秒待つ。
　　ここまで。
    手札描画処理。
    ゲームターンは「入力」
    情報ラベルは「あなたの番です。」

●パス実行
　　他プレイヤー処理。
    

