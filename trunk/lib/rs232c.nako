#-----------------------------------------------------------------------
# RS232C 制御のための定義ファイル
#-----------------------------------------------------------------------
# plug-ins\nakors232c.dll が必要
# ----
# デバッグ＆プログラム修正の michio さんに感謝します。
# ----

■RS232C
　・{非公開}オブジェクト
　#設定項目
  ・BPS{=9600}
  ・CHARBIT{=8}
  ・STOPBIT{=1}
  ・PARITYMODE{=「無し」} #(無し/EVEN/ODD/MARK/SPACE)より選択
  ・タイムアウト{=30000} # msecで指定
  ・ポート{=「COM1」}
  ・XonLim{=0}
  ・XoffLim{=0}
  ・XonChar{=17}
  ・XoffChar{=19}
  ・ErrorChar{=0}
  ・EvtChar{=0}
  ・EofChar{=0}
  ・パケットサイズ{=0} # 0以上を設定し、データ受信すると「パケット受信した時」が呼ばれる
  #イベント
  ・{イベント}開いた時
  ・{イベント}閉じた時
  ・{イベント}生成した時
  ・{イベント}BREAK検出した時
  ・{イベント}CTS変化した時
  ・{イベント}DSR変化した時
  ・{イベント}エラー発生した時
  ・{イベント}RING検出した時
  ・{イベント}RLSD変化した時
  ・{イベント}送信完了した時
  ・{イベント}受信した時
  ・{イベント}パケット受信した時
  ・{イベント}イベント文字受信した時
  ・受信データ # データを受信した時に設定される
  #接続などメソッド
  ・作る〜RS232C_COMMAND(自身,"create","");
  ・開く〜RS232C_COMMAND(自身,"open","");
  ・閉じる〜RS232C_COMMAND(自身,"close","");
  ・送信(MSGを|MSGで)〜RS232C_COMMAND(自身,"send", MSG);

/*
#-----------------------------------------------------------------------
# [使い方] その１〜パケットサイズが固定のとき
！「rs232c.nako」を取り込む
テストRS232CとはRS232C # RS232C部品を作る
テストRS232Cについて
　　ポートは「COM4」
    BPSは9600
    #---------------------------------
    # 受信イベントの設定
    #---------------------------------
    # 8バイトが1パケットの時を想定
    パケットサイズは8
    パケット受信した時は〜
    　　受信データをバイナリダンプして表示。
　　#---------------------------------
    # データの送信
    #---------------------------------
    開く。
    「test」を送信。
    #...処理...
    閉じる。

#-----------------------------------------------------------------------
# [使い方] その２〜パケットサイズが不定のとき
！「rs232c.nako」を取り込む
テストRS232CとはRS232C # RS232C部品を作る
テストRS232Cについて
　　ポートは「COM4」
    BPSは9600
    #---------------------------------
    # 受信イベントの設定
    #---------------------------------
    受信した時は〜
    　　受信データをバイナリダンプして表示。
　　#---------------------------------
    # データの送信
    #---------------------------------
    開く。
    「test」を送信。
    #...処理...
    閉じる。

#-----------------------------------------------------------------------
Tabbyさんより頂いたサンプル
参照)http://members.jcom.home.ne.jp/0434383301/vc10.htm

＜正常サンプル＞
!「rs232c.nako」を取り込む
受信バッファとは文字列　　　　　　　　　　　　　　　　　　　// (1)

母艦について
　　テキストは「RS232C　TEST」
　　Ｗは６２０
　　Ｈは４５０
母艦を中央移動

受信ログとはメモ
　　そのＷは６００
　　そのＨは４００
　　その文字サイズは１８
　　その文字色は青色

テストRS232CとはRS232C # RS232C部品を作る
テストRS232Cについて
　　ポートは「COM1」
　　BPSは9600
　　受信した時は〜
　　　　　　受信バッファに「｛受信データ｝」を追加　　　　　　　// (2)
　　　　　　受信ログは「｛受信バッファ｝」　　　　　　　　　　　// (3) 
テストRS232Cで開く
#-------------------------------
#折り返しテスト用擬似データ送信
#--------------------------------
10回
　　　　「あいうえおかきくけこ1234567890
abcdefghijklmnopqrstuvwxyzk漢字はこれでＯＫ｛\n｝」をテストRS232Cで送信

#-----------------------------------------------------------------------
# 使い方  その2〜パケットサイズが不定のとき.nako
！「rs232c.nako」を取り込む
受信バッファとは文字列

＃母艦の可視はオフ
テストRS232CとはRS232C # RS232C部品を作る
テストRS232Cについて
　　ポートは「COM1」
    BPSは9600

テストRS232Cの受信した時は〜
#　　受信バッファは「｛受信バッファ｝｛受信データ｝」
     受信バッファに「｛受信データ｝」を追加  //＜変更＞この方がわかりやすい
テストRS232Cの開く        
#---------------------------------
# データの送信
#---------------------------------
「＜なでしこ＞でRS232C｛\n｝」をテストRS232Cで送信
「123456789012345678901234567890」をテストRS232Cで送信
「あいうえおかきくけこ漢字かんじカンジ」をテストRS232Cで送信

0秒待つ　　　　　　　//なぜかこれがないと空を言う
テストRS232Cの閉じる
受信バッファを言う 
*/
